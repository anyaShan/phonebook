{"version":3,"file":"static/js/380.8ef68686.chunk.js","mappings":"0JAEaA,E,QAAOC,GAAAA,IAAH,4C,SCCJC,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9B,OAAO,SAACH,EAAD,UAAOG,GACf,C,2JCFYC,GAAWH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,onCAuDRK,GAAYL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,0W,SCnDlBO,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,MAAOF,EAAAA,KAAaG,WACpBC,SAAUJ,EAAAA,KAAaG,aAGZE,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAeC,EAAAA,EAAAA,MACfC,GAAkBD,EAAAA,EAAAA,MASxB,OACE,SAAC,KAAD,CACEE,cAAe,CACbT,MAAO,GACPE,SAAU,IAEZQ,iBAAkBb,EAClBc,SAdqB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC1Bb,EAAoBY,EAApBZ,MAAOE,EAAaU,EAAbV,SAEfE,GAASU,EAAAA,EAAAA,IAAM,CAAEd,MAAAA,EAAOE,SAAAA,KACxBW,GACD,EAGC,UAQE,UAACpB,EAAD,YACE,4BACE,kBAAOsB,QAAST,EAAhB,oBACA,SAACX,EAAD,CACEqB,KAAK,QACLC,KAAK,QACLhB,UAAQ,EACRiB,YAAY,iBACZC,GAAIb,KAEN,SAAC,KAAD,CAAcc,UAAU,OAAOH,KAAK,WACpC,kBAAOF,QAASP,EAAhB,uBACA,SAACb,EAAD,CACEqB,KAAK,WACLC,KAAK,WACLhB,UAAQ,EACRiB,YAAY,WACZC,GAAIX,KAEN,SAAC,KAAD,CAAcY,UAAU,OAAOH,KAAK,iBAEtC,mBAAQD,KAAK,SAASK,UAAU,EAAhC,wBAMP,ECjDD,EARc,WACZ,OACE,SAAC9B,EAAA,EAAD,WACE,SAACY,EAAD,KAGL,C","sources":["components/MainContainer/MainContainer.styled.js","components/MainContainer/MainContainer.js","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/Login/Login.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Main = styled.div`\n  padding: 0 24px;\n`;\n","import PropTypes from 'prop-types';\nimport { Main } from './MainContainer.styled';\n\nexport const MainContainer = ({ children }) => {\n  return <Main>{children}</Main>;\n};\n\nMainContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormWrap = styled(Form)`\n  display: flex;\n  flex-direction: column;\n\n  div {\n    margin-left: auto;\n    margin-right: auto;\n    min-width: 400px;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    margin-bottom: 30px;\n  }\n\n  label {\n    font-weight: 700;\n    font-size: 16px;\n    line-height: 1.2;\n    letter-spacing: 0.04em;\n  }\n\n  button {\n    width: 150px;\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    padding: 3px 15px;\n    text-align: center;\n    border: 0;\n    border-radius: 5px;\n    cursor: pointer;\n\n    background-color: rgb(241, 188, 90);\n    color: inherit;\n    box-shadow: rgb(0 0 0 / 20%) 0px 2px 1px -1px,\n      rgb(0 0 0 / 14%) 0px 1px 1px 0px, rgb(0 0 0 / 12%) 0px 1px 3px 0px;\n\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    font-weight: 700;\n    font-size: 16px;\n    line-height: 1.9;\n    letter-spacing: 0.06em;\n\n    &:hover {\n      color: #fff;\n      background-color: rgb(52, 162, 212);\n    }\n  }\n`;\n\nexport const FieldWrap = styled(Field)`\n  flex-grow: 1;\n  padding: 10px;\n  border: 1px solid rgb(241, 188, 90);\n  border-radius: 4px;\n  background-color: white;\n\n  &::placeholder {\n    color: rgba(52, 162, 212, 0.5);\n\n    font-size: 16px;\n    line-height: 1.25px;\n  }\n\n  :focus {\n    outline: 1px solid rgb(52, 162, 212);\n    border: 1px solid transparent;\n  }\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux/es/exports';\nimport { logIn } from 'redux/auth/operations';\nimport * as yup from 'yup';\nimport { FormWrap, FieldWrap } from './LoginForm.styled';\n\nlet schema = yup.object().shape({\n  email: yup.string().required(),\n  password: yup.string().required(),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  //   const contacts = useSelector(selectContacts);\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n\n  const handleFormSubmit = (values, { resetForm }) => {\n    const { email, password } = values;\n\n    dispatch(logIn({ email, password }));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={schema}\n      onSubmit={handleFormSubmit}\n    >\n      <FormWrap>\n        <div>\n          <label htmlFor={emailInputId}>Email</label>\n          <FieldWrap\n            type=\"email\"\n            name=\"email\"\n            required\n            placeholder=\"user@gmail.com\"\n            id={emailInputId}\n          />\n          <ErrorMessage component=\"span\" name=\"email\" />\n          <label htmlFor={passwordInputId}>Password</label>\n          <FieldWrap\n            type=\"password\"\n            name=\"password\"\n            required\n            placeholder=\"User_123\"\n            id={passwordInputId}\n          />\n          <ErrorMessage component=\"span\" name=\"password\" />\n        </div>\n        <button type=\"submit\" disabled={false}>\n          Log In\n        </button>\n      </FormWrap>\n    </Formik>\n  );\n};\n","import { MainContainer } from 'components/MainContainer/MainContainer';\n\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <MainContainer>\n      <LoginForm />\n    </MainContainer>\n  );\n};\n\nexport default Login;\n"],"names":["Main","styled","MainContainer","children","FormWrap","Form","FieldWrap","Field","schema","yup","shape","email","required","password","LoginForm","dispatch","useDispatch","emailInputId","nanoid","passwordInputId","initialValues","validationSchema","onSubmit","values","resetForm","logIn","htmlFor","type","name","placeholder","id","component","disabled"],"sourceRoot":""}