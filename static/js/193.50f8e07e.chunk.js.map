{"version":3,"file":"static/js/193.50f8e07e.chunk.js","mappings":"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","sources":["components/MainContainer/MainContainer.styled.js","components/MainContainer/MainContainer.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","pages/Contacts/Contacts.styled.js","components/Section/Section.styled.js","components/Section/Section.js","components/Sidebar/Sidebar.styled.js","components/Sidebar/Sidebar.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","pages/Contacts/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Main = styled.div`\n  padding: 0 24px;\n`;\n","import PropTypes from 'prop-types';\nimport { Main } from './MainContainer.styled';\n\nexport const MainContainer = ({ children }) => {\n  return <Main>{children}</Main>;\n};\n\nMainContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectValueFilter = state => state.filter.value;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectValueFilter],\n  (items, filter) => {\n    return items.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filter)\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  padding: 25px 0;\n\n  display: flex;\n  /* flex-wrap: wrap; */\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 25px;\n\n  font-size: 40;\n  color: #010101;\n`;\n","import styled from 'styled-components';\n\nexport const SectionWrapper = styled.section`\n  width: 400px;\n  flex-grow: 1;\n  padding: 25px;\n  background-color: rgb(243, 240, 240);\n  border-radius: 5px;\n\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 10px;\n`;\n\nexport const SectionTitle = styled.h1`\n  margin-bottom: 25px;\n  text-align: center;\n  font-size: 24px;\n  font-weight: 600;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionWrapper, SectionTitle } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionWrapper>\n      <SectionTitle>{title}</SectionTitle>\n      <div>{children}</div>\n    </SectionWrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const SidebarWrapper = styled.div`\n  width: 400px;\n  /* flex-basis: 400px; */\n  /* padding: 25px; */\n  /* background-color: rgb(243, 240, 240); */\n  /* border-radius: 5px; */\n\n  /* box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 10px; */\n`;\n\nexport const SidebarTitle = styled.h1`\n  margin-bottom: 25px;\n  text-align: center;\n  font-size: 24px;\n  font-weight: 600;\n`;\n","import PropTypes from 'prop-types';\nimport { SidebarWrapper, SidebarTitle } from './Sidebar.styled';\n\nexport const Sidebar = ({ title, children }) => {\n  return (\n    <SidebarWrapper>\n      <SidebarTitle>{title}</SidebarTitle>\n      <div>{children}</div>\n    </SidebarWrapper>\n  );\n};\n\nSidebar.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormWrap = styled(Form)`\n  display: flex;\n  flex-direction: column;\n\n  div {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    margin-bottom: 30px;\n  }\n\n  label {\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 1.2;\n    letter-spacing: 0.06em;\n  }\n\n  button {\n    width: 150px;\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    padding: 3px 15px;\n    text-align: center;\n    border: 0;\n    border-radius: 5px;\n    cursor: pointer;\n\n    background-color: rgb(241, 188, 90);\n    color: inherit;\n    box-shadow: rgb(0 0 0 / 20%) 0px 2px 1px -1px,\n      rgb(0 0 0 / 14%) 0px 1px 1px 0px, rgb(0 0 0 / 12%) 0px 1px 3px 0px;\n\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    font-weight: 700;\n    font-size: 12px;\n    line-height: 1.9;\n    letter-spacing: 0.06em;\n\n    &:hover {\n      background-color: rgb(52, 162, 212);\n    }\n  }\n`;\n\nexport const FieldWrap = styled(Field)`\n  flex-grow: 1;\n  padding: 10px;\n  border: 1px solid rgb(241, 188, 90);\n  border-radius: 4px;\n  background-color: white;\n\n  &::placeholder {\n    color: rgba(52, 162, 212, 0.5);\n\n    font-size: 16px;\n    line-height: 1.25px;\n  }\n\n  :focus {\n    outline: 1px solid rgb(52, 162, 212);\n    border: 1px solid transparent;\n  }\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\nimport * as yup from 'yup';\nimport { FormWrap, FieldWrap } from './ContactForm.styled';\n\nconst regExpName = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst regExpNumber =\n  /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/;\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      regExpName,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required(),\n  number: yup\n    .string()\n    .matches(\n      regExpNumber,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const handleFormSubmit = (values, { resetForm }) => {\n    const { name, number } = values;\n    if (contacts.some(contact => contact.name === name)) {\n      return alert(`${name} is already in contacts.`);\n    }\n\n    dispatch(addContact({ name, number }));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={schema}\n      onSubmit={handleFormSubmit}\n    >\n      <FormWrap>\n        <div>\n          <label htmlFor={nameInputId}>Name</label>\n          <FieldWrap\n            type=\"text\"\n            name=\"name\"\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            // required\n            placeholder=\"Rosie Simpson\"\n            id={nameInputId}\n          />\n          <ErrorMessage component=\"span\" name=\"name\" />\n          <label htmlFor={numberInputId}>Number</label>\n          <FieldWrap\n            type=\"tel\"\n            name=\"number\"\n            // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            // required\n            placeholder=\"459-12-56\"\n            id={numberInputId}\n          />\n          <ErrorMessage component=\"span\" name=\"number\" />\n        </div>\n        <button type=\"submit\" disabled={false}>\n          Add contact\n        </button>\n      </FormWrap>\n    </Formik>\n  );\n};\n\n// ======================= ванільний інпут ============================\n\n// export class ContactForm extends Component {\n//   state = {\n//     name: '',\n//     number: '',\n//   };\n\n//   nameInputId = nanoid();\n//   numberInputId = nanoid();\n\n//   handleFormChange = event => {\n//     const { name, value } = event.currentTarget;\n//     this.setState({ [name]: value });\n//   };\n\n//   handleFormSubmit = event => {\n//     event.preventDefault();\n\n//     this.props.onSubmit(this.state);\n\n//     this.reset();\n//   };\n\n//   reset = () => {\n//     this.setState({ name: '', number: '' });\n//   };\n\n//   render() {\n//     const { name, number } = this.state;\n//     return (\n//       <Form onSubmit={this.handleFormSubmit}>\n//         <div>\n//           <label htmlFor={this.nameInputId}>Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             value={name}\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//             required\n//             placeholder=\"Rosie Simpson\"\n//             id={this.nameInputId}\n//             onChange={this.handleFormChange}\n//           />\n//           <label htmlFor={this.numberInputId}>Number</label>\n//           <input\n//             type=\"tel\"\n//             name=\"number\"\n//             value={number}\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//             required\n//             placeholder=\"459-12-56\"\n//             id={this.numberInputId}\n//             onChange={this.handleFormChange}\n//           />\n//         </div>\n//         <button type=\"submit\" disabled={false}>\n//           Add contact\n//         </button>\n//       </Form>\n//     );\n//   }\n// }\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  margin-bottom: 15px;\n\n  label {\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 1.2;\n    letter-spacing: 0.06em;\n  }\n\n  input {\n    flex-grow: 1;\n    padding: 5px;\n    border: 1px solid grey;\n    border-radius: 4px;\n    background-color: white;\n\n    :focus {\n      outline: 1px solid rgb(241, 188, 90);\n      border: 1px solid transparent;\n    }\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectValueFilter } from 'redux/selectors';\nimport { changeFilter } from 'redux/filterSlice';\n\nimport { FilterWrapper } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectValueFilter);\n\n  const handleFilterChange = e => {\n    const filterValue = e.target.value.toLowerCase();\n    dispatch(changeFilter(filterValue));\n  };\n\n  return (\n    <FilterWrapper>\n      <label>Fined contacts by name:</label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </FilterWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ItemWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  border-radius: 5px;\n  color: white;\n\n  background-color: rgb(197, 194, 194);\n  box-shadow: rgb(0 0 0 / 20%) 0px 2px 1px -1px,\n    rgb(0 0 0 / 14%) 0px 1px 1px 0px, rgb(0 0 0 / 12%) 0px 1px 3px 0px;\n\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 1.9;\n  letter-spacing: 0.06em;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding: 3px 15px;\n  text-align: center;\n  border: 0;\n  border-radius: 5px;\n  cursor: pointer;\n\n  background-color: rgb(241, 188, 90);\n  color: white;\n  box-shadow: rgb(0 0 0 / 20%) 0px 2px 1px -1px,\n    rgb(0 0 0 / 14%) 0px 1px 1px 0px, rgb(0 0 0 / 12%) 0px 1px 3px 0px;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.9;\n  letter-spacing: 0.06em;\n\n  &:hover {\n    background-color: rgb(52, 162, 212);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux/es/exports';\nimport { deleteContact } from 'redux/operations';\nimport { Button, ItemWrap } from './ContactItem.styled';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <ItemWrap>\n      <p>\n        {contact.name}: {contact.number}\n      </p>\n      <Button type=\"button\" onClick={handleDelete}>\n        Delete\n      </Button>\n    </ItemWrap>\n  );\n};\n\nContactItem.propTypes = {\n  item: PropTypes.shape({\n    name: PropTypes.string,\n    number: PropTypes.number.isRequired,\n    deleteContact: PropTypes.func.isRequired,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\n// export const Item = styled.li`\n//   display: flex;\n//   align-items: center;\n//   justify-content: space-between;\n//   padding: 10px;\n//   border-radius: 5px;\n//   color: white;\n\n//   background-color: rgb(197, 194, 194);\n//   box-shadow: rgb(0 0 0 / 20%) 0px 2px 1px -1px,\n//     rgb(0 0 0 / 14%) 0px 1px 1px 0px, rgb(0 0 0 / 12%) 0px 1px 3px 0px;\n\n//   font-weight: 600;\n//   font-size: 12px;\n//   line-height: 1.9;\n//   letter-spacing: 0.06em;\n\n/* button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    padding: 3px 15px;\n    text-align: center;\n    border: 0;\n    border-radius: 5px;\n    cursor: pointer;\n\n    background-color: rgb(241, 188, 90);\n    color: white;\n    box-shadow: rgb(0 0 0 / 20%) 0px 2px 1px -1px,\n      rgb(0 0 0 / 14%) 0px 1px 1px 0px, rgb(0 0 0 / 12%) 0px 1px 3px 0px;\n\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.9;\n    letter-spacing: 0.06em;\n\n    &:hover {\n      background-color: rgb(52, 162, 212);\n    }\n  } */\n// `;\n","import { useSelector } from 'react-redux/es/exports';\nimport { selectVisibleContacts } from 'redux/selectors';\n\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {visibleContacts.map(contact => (\n        <li key={contact.id}>\n          <ContactItem contact={contact} />\n        </li>\n      ))}\n    </List>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { Helmet } from 'react-helmet';\n\nimport { fetchContacts } from 'redux/operations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\n\nimport { MainContainer } from 'components/MainContainer/MainContainer';\nimport { Container } from './Contacts.styled';\nimport { Section } from 'components/Section/Section';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  // const dispatch = useDispatch();\n  // const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {/* <Helmet>\n        <title>Your tasks</title>\n      </Helmet> */}\n      <MainContainer>\n        {isLoading && !error ? (\n          <Loader />\n        ) : (\n          <Container>\n            <Sidebar title=\"Phonebook\">\n              <ContactForm />\n            </Sidebar>\n            <Section title=\"Contacts\">\n              <Filter />\n              <ContactList />\n            </Section>\n          </Container>\n        )}\n      </MainContainer>\n      {/* <TaskEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <TaskList /> */}\n    </>\n  );\n}\n"],"names":["Main","styled","MainContainer","children","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectValueFilter","filter","selectVisibleContacts","contact","toLocaleLowerCase","includes","Container","SectionWrapper","SectionTitle","Section","title","SidebarWrapper","SidebarTitle","Sidebar","FormWrap","Form","FieldWrap","Field","schema","yup","shape","matches","required","number","ContactForm","dispatch","useDispatch","useSelector","nameInputId","nanoid","numberInputId","initialValues","validationSchema","onSubmit","values","resetForm","some","alert","addContact","htmlFor","type","placeholder","id","component","disabled","FilterWrapper","Filter","onChange","e","filterValue","target","toLowerCase","changeFilter","ItemWrap","Button","ContactItem","onClick","deleteContact","List","ContactList","visibleContacts","Tasks","useEffect","fetchContacts","Loader"],"sourceRoot":""}